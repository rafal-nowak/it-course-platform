version: "3"
services:

  mongodb-production:
    image: mongo
    container_name: p2-mongodb-production
    ports:
      - 27017:27017
    volumes:
      - ./mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass

  mongo-express-production:
    image: mongo-express
    container_name: p2-mongo-express-production
    ports:
      - 8087:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb-production
    restart: unless-stopped

  mongodb-it:
    image: mongo
    container_name: p2-mongodb-it
    ports:
      - 27016:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass

  mongo-express-it:
    image: mongo-express
    container_name: p2-mongo-express-it
    ports:
      - 8086:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongodb-it
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: p2-zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: p2-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_CREATE_TOPICS: "Kafka_Task_json:3:1,Kafka_Task_Report_json:3:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

volumes:
  data: {}

networks:
  default: